import cv2
import numpy as np
import os
from blend_modes import soft_light
from dotenv import load_dotenv

load_dotenv()  # This will load the environment variables

mockup_path = os.environ.get("MOCKUP_FILE")
art_path = '9.png' #os.environ.get("ART_FILE")

def add_alpha_channel(image):
    if image.ndim == 2:  # Check if the image is grayscale
        image = cv2.cvtColor(image, cv2.COLOR_GRAY2BGR)
    height, width = image.shape[:2]
    alpha_channel = np.ones((height, width, 1), dtype=image.dtype) * 255
    return np.concatenate((image, alpha_channel), axis=-1)

def resize_image(image, width, height):
    return cv2.resize(image, (width, height), interpolation=cv2.INTER_AREA)

# Load images with alpha channel
background_img = cv2.imread(mockup_path, cv2.IMREAD_UNCHANGED).astype(float)
foreground_img = cv2.imread(art_path, cv2.IMREAD_UNCHANGED).astype(float)

# Ensure both images have an alpha channel
background_img = add_alpha_channel(background_img)
foreground_img = add_alpha_channel(foreground_img)

# Resize images to the same dimensions
new_width, new_height = 2048, 2048  # Choose appropriate dimensions
background_img = resize_image(background_img, new_width, new_height)
foreground_img = resize_image(foreground_img, new_width, new_height)

# Blend images
opacity = 0.7  # The opacity of the foreground that is blended onto the background is 70 %.
blended_img_float = soft_light(background_img, foreground_img, opacity)

# Display blended image
blended_img_uint8 = blended_img_float.astype(np.uint8)  # Convert image to OpenCV native display format
cv2.imshow('window', blended_img_uint8)
cv2.waitKey()  # Press a key to close window with the image
